{"ast":null,"code":"var _jsxFileName = \"/Users/vladikumpan/draw-guess/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/Pages/Game\";\nimport Guess from \"./components/Pages/Guess\";\nimport Welcome from \"./components/Pages/Welcome/Welcome\";\nimport PageSwitcher from \"./components/PageSwitcher\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  state = {\n    data: null\n  };\n\n  const componentDidMount = () => {\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  }; // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  const callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n\n    return body;\n  };\n\n  const [isFinishedDrawing, setIsFinishedDrawing] = useState(false);\n  const [playerDrawing, setPlayerDrawing] = useState();\n  const [playerSelection, setPlayerSelection] = useState(\"\");\n\n  const onFinishDrawingHandler = props => {\n    setPlayerDrawing(props[0]);\n    setPlayerSelection(props[1]);\n    setIsFinishedDrawing(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isFinishedDrawing && /*#__PURE__*/_jsxDEV(Game, {\n      onPlayerFinishDrawing: onFinishDrawingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 30\n    }, this), isFinishedDrawing && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Guess, {\n        value: playerDrawing,\n        word: playerSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"22HJzvlDOlyREwmMNDRtEHSloXo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Game","Guess","Welcome","PageSwitcher","App","state","data","componentDidMount","callBackendAPI","then","res","setState","express","catch","err","console","log","response","fetch","body","json","status","Error","message","isFinishedDrawing","setIsFinishedDrawing","playerDrawing","setPlayerDrawing","playerSelection","setPlayerSelection","onFinishDrawingHandler","props"],"sources":["/Users/vladikumpan/draw-guess/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n\nimport \"./App.css\";\nimport Game from \"./components/Pages/Game\";\nimport Guess from \"./components/Pages/Guess\";\nimport Welcome from \"./components/Pages/Welcome/Welcome\";\nimport PageSwitcher from \"./components/PageSwitcher\";\n\nconst App = () => {\n  state = {\n    data: null\n  };\n\n  const componentDidMount = () =>{\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n    // fetching the GET route from the Express server which matches the GET route from server.js\n  const callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  const [isFinishedDrawing, setIsFinishedDrawing] = useState(false);\n  const [playerDrawing, setPlayerDrawing] = useState();\n  const [playerSelection,setPlayerSelection] = useState(\"\");\n\n  const onFinishDrawingHandler = (props) => {\n    setPlayerDrawing(props[0]);\n    setPlayerSelection(props[1]);\n    setIsFinishedDrawing(true);\n  };\n\n  return (\n    <div>\n      {!isFinishedDrawing && <Game onPlayerFinishDrawing={onFinishDrawingHandler} />}\n      {isFinishedDrawing && (\n        <div>\n          <Guess value={playerDrawing} word={playerSelection}/>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChBC,KAAK,GAAG;IACNC,IAAI,EAAE;EADA,CAAR;;EAIA,MAAMC,iBAAiB,GAAG,MAAK;IAC7B,KAAKC,cAAL,GACGC,IADH,CACQC,GAAG,IAAI,KAAKC,QAAL,CAAc;MAAEL,IAAI,EAAEI,GAAG,CAACE;IAAZ,CAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;EAGD,CAJD,CALgB,CAUd;;;EACF,MAAMN,cAAc,GAAG,YAAY;IACjC,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAA5B;IACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;IAEA,IAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;MAC3B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;IACD;;IACD,OAAOJ,IAAP;EACD,CARD;;EAUA,MAAM,CAACK,iBAAD,EAAoBC,oBAApB,IAA4C1B,QAAQ,CAAC,KAAD,CAA1D;EACA,MAAM,CAAC2B,aAAD,EAAgBC,gBAAhB,IAAoC5B,QAAQ,EAAlD;EACA,MAAM,CAAC6B,eAAD,EAAiBC,kBAAjB,IAAuC9B,QAAQ,CAAC,EAAD,CAArD;;EAEA,MAAM+B,sBAAsB,GAAIC,KAAD,IAAW;IACxCJ,gBAAgB,CAACI,KAAK,CAAC,CAAD,CAAN,CAAhB;IACAF,kBAAkB,CAACE,KAAK,CAAC,CAAD,CAAN,CAAlB;IACAN,oBAAoB,CAAC,IAAD,CAApB;EACD,CAJD;;EAMA,oBACE;IAAA,WACG,CAACD,iBAAD,iBAAsB,QAAC,IAAD;MAAM,qBAAqB,EAAEM;IAA7B;MAAA;MAAA;MAAA;IAAA,QADzB,EAEGN,iBAAiB,iBAChB;MAAA,uBACE,QAAC,KAAD;QAAO,KAAK,EAAEE,aAAd;QAA6B,IAAI,EAAEE;MAAnC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAzCD;;GAAMxB,G;;KAAAA,G;AA2CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}