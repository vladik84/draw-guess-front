{"ast":null,"code":"var _jsxFileName = \"/Users/vladikumpan/draw-guess/src/components/Pages/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport SelectWord from \"./SelectWord\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvas = useRef();\nlet ctx = null; // initialize the canvas context\n\nuseEffect(() => {\n  // dynamically assign the width and height to canvas\n  const canvasEle = canvas.current;\n  canvasEle.width = canvasEle.clientWidth;\n  canvasEle.height = canvasEle.clientHeight; // get context of the canvas\n\n  ctx = canvasEle.getContext(\"2d\");\n}, []);\n\nconst Game = () => {\n  _s();\n\n  const [playerSelection, setPlayerSelection] = useState(\"\");\n\n  const wordSelectedHandler = selectedWord => {\n    setPlayerSelection(selectedWord);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SelectWord, {\n      onSelectWord: wordSelectedHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The word that was passed to the drawing board: \", playerSelection]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"J7jFC20oii/ATzjFapsuIx3q3YU=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useRef","useEffect","SelectWord","canvas","ctx","canvasEle","current","width","clientWidth","height","clientHeight","getContext","Game","playerSelection","setPlayerSelection","wordSelectedHandler","selectedWord"],"sources":["/Users/vladikumpan/draw-guess/src/components/Pages/Game.js"],"sourcesContent":["import React, { useState ,useRef, useEffect } from \"react\";\n\nimport SelectWord from \"./SelectWord\";\n\nconst canvas = useRef();\n  let ctx = null;\n \n  // initialize the canvas context\n  useEffect(() => {\n    // dynamically assign the width and height to canvas\n    const canvasEle = canvas.current;\n    canvasEle.width = canvasEle.clientWidth;\n    canvasEle.height = canvasEle.clientHeight;\n \n    // get context of the canvas\n    ctx = canvasEle.getContext(\"2d\");\n  }, []);\n\nconst Game = () => {\n  const [playerSelection, setPlayerSelection] = useState(\"\");\n\n  const wordSelectedHandler = (selectedWord) => {\n    setPlayerSelection(selectedWord);\n  };\n\n  return (\n    <div>\n      <SelectWord onSelectWord={wordSelectedHandler} />\n      <p>The word that was passed to the drawing board: {playerSelection}</p>\n      <canvas ref={canvas}></canvas>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,MAAM,GAAGH,MAAM,EAArB;AACE,IAAII,GAAG,GAAG,IAAV,C,CAEA;;AACAH,SAAS,CAAC,MAAM;EACd;EACA,MAAMI,SAAS,GAAGF,MAAM,CAACG,OAAzB;EACAD,SAAS,CAACE,KAAV,GAAkBF,SAAS,CAACG,WAA5B;EACAH,SAAS,CAACI,MAAV,GAAmBJ,SAAS,CAACK,YAA7B,CAJc,CAMd;;EACAN,GAAG,GAAGC,SAAS,CAACM,UAAV,CAAqB,IAArB,CAAN;AACD,CARQ,EAQN,EARM,CAAT;;AAUF,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,EAAD,CAAtD;;EAEA,MAAMgB,mBAAmB,GAAIC,YAAD,IAAkB;IAC5CF,kBAAkB,CAACE,YAAD,CAAlB;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE,QAAC,UAAD;MAAY,YAAY,EAAED;IAA1B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,8DAAmDF,eAAnD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,GAAG,EAAEV;IAAb;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAdD;;GAAMS,I;;KAAAA,I;AAgBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}