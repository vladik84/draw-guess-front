{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n/**\n * Given two points and a length, calculate and draw the catenary.\n * \n * JavaScript implementation:\n * Copyright (c) 2018 Jan Hug <me@dulnan.net>\n * Released under the MIT license.\n * \n * ----------------------------------------------------------------------------\n * \n * Original ActionScript implementation:\n * Copyright poiasd ( http://wonderfl.net/user/poiasd )\n * MIT License ( http://www.opensource.org/licenses/mit-license.php )\n * Downloaded from: http://wonderfl.net/c/8Bnl\n * \n * ----------------------------------------------------------------------------\n * \n * Archived by and downloaded from:\n * http://wa.zozuar.org/code.php?c=8Bnl\n */\n\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar EPSILON = 1e-6;\n\nvar Catenary = function () {\n  /**\n   * constructor\n   *\n   * @param {Object} settings\n   * @param {Number} settings.segments Number of segments of the chain.\n   * @param {Number} settings.iterationLimit Maximum amount iterations for getting catenary parameters.\n   */\n  function Catenary() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$segments = _ref.segments,\n        segments = _ref$segments === undefined ? 50 : _ref$segments,\n        _ref$iterationLimit = _ref.iterationLimit,\n        iterationLimit = _ref$iterationLimit === undefined ? 100 : _ref$iterationLimit;\n\n    _classCallCheck(this, Catenary);\n\n    this.p1 = new _Point2.default();\n    this.p2 = new _Point2.default();\n    this.segments = segments;\n    this.iterationLimit = iterationLimit;\n  }\n  /**\n   * Draws a catenary given two coordinates, a length and a context.\n   * \n   * @param {CanvasRenderingContext2D} context The canvas context to draw the catenary on to.\n   * @param {Point} p1 First point\n   * @param {Point} p2 Second point\n   * @param {Number} chainLength The length of the catenary\n   */\n\n\n  _createClass(Catenary, [{\n    key: 'drawToCanvas',\n    value: function drawToCanvas(context, point1, point2, chainLength) {\n      this.p1.update(point1);\n      this.p2.update(point2);\n      var isFlipped = this.p1.x > this.p2.x;\n      var p1 = isFlipped ? this.p2 : this.p1;\n      var p2 = isFlipped ? this.p1 : this.p2;\n      var distance = p1.getDistanceTo(p2);\n      var curveData = [];\n      var isStraight = true; // Prevent \"expensive\" catenary calculations if it would only result\n      // in a straight line.\n\n      if (distance < chainLength) {\n        var diff = p2.x - p1.x; // If the distance on the x axis of both points is too small, don't\n        // calculate a catenary.\n\n        if (diff > 0.01) {\n          var h = p2.x - p1.x;\n          var v = p2.y - p1.y;\n          var a = -this.getCatenaryParameter(h, v, chainLength, this.iterationLimit);\n          var x = (a * Math.log((chainLength + v) / (chainLength - v)) - h) * 0.5;\n          var y = a * Math.cosh(x / a);\n          var offsetX = p1.x - x;\n          var offsetY = p1.y - y;\n          curveData = this.getCurve(a, p1, p2, offsetX, offsetY, this.segments);\n          isStraight = false;\n        } else {\n          var mx = (p1.x + p2.x) * 0.5;\n          var my = (p1.y + p2.y + chainLength) * 0.5;\n          curveData = [[p1.x, p1.y], [mx, my], [p2.x, p2.y]];\n        }\n      } else {\n        curveData = [[p1.x, p1.y], [p2.x, p2.y]];\n      }\n\n      if (isStraight) {\n        this.drawLine(curveData, context);\n      } else {\n        this.drawCurve(curveData, context);\n      }\n\n      return curveData;\n    }\n    /**\n     * Determines catenary parameter.\n     * \n     * @param {Number} h Horizontal distance of both points.\n     * @param {Number} v Vertical distance of both points.\n     * @param {Number} length The catenary length.\n     * @param {Number} limit Maximum amount of iterations to find parameter.\n     */\n\n  }, {\n    key: 'getCatenaryParameter',\n    value: function getCatenaryParameter(h, v, length, limit) {\n      var m = Math.sqrt(length * length - v * v) / h;\n      var x = Math.acosh(m) + 1;\n      var prevx = -1;\n      var count = 0;\n\n      while (Math.abs(x - prevx) > EPSILON && count < limit) {\n        prevx = x;\n        x = x - (Math.sinh(x) - m * x) / (Math.cosh(x) - m);\n        count++;\n      }\n\n      return h / (2 * x);\n    }\n    /**\n     * Calculate the catenary curve.\n     * Increasing the segments value will produce a catenary closer\n     * to reality, but will require more calcluations.\n     * \n     * @param {Number} a The catenary parameter.\n     * @param {Point} p1 First point\n     * @param {Point} p2 Second point\n     * @param {Number} offsetX The calculated offset on the x axis.\n     * @param {Number} offsetY The calculated offset on the y axis.\n     * @param {Number} segments How many \"parts\" the chain should be made of.\n     */\n\n  }, {\n    key: 'getCurve',\n    value: function getCurve(a, p1, p2, offsetX, offsetY, segments) {\n      var data = [p1.x, a * Math.cosh((p1.x - offsetX) / a) + offsetY];\n      var d = p2.x - p1.x;\n      var length = segments - 1;\n\n      for (var i = 0; i < length; i++) {\n        var x = p1.x + d * (i + 0.5) / length;\n        var y = a * Math.cosh((x - offsetX) / a) + offsetY;\n        data.push(x, y);\n      }\n\n      data.push(p2.x, a * Math.cosh((p2.x - offsetX) / a) + offsetY);\n      return data;\n    }\n    /**\n     * Draws a straight line between two points.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     */\n\n  }, {\n    key: 'drawLine',\n    value: function drawLine(data, context) {\n      context.moveTo(data[0][0], data[0][1]);\n      context.lineTo(data[1][0], data[1][1]);\n    }\n    /**\n     * Draws a quadratic curve between every calculated catenary segment,\n     * so that the segments don't look like straight lines.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     * \n     * @returns {Array} The original segment coordinates.\n     */\n\n  }, {\n    key: 'drawCurve',\n    value: function drawCurve(data, context) {\n      var length = data.length * 0.5 - 1;\n      var ox = data[2];\n      var oy = data[3];\n      var temp = [];\n      context.moveTo(data[0], data[1]);\n\n      for (var i = 2; i < length; i++) {\n        var x = data[i * 2];\n        var y = data[i * 2 + 1];\n        var mx = (x + ox) * 0.5;\n        var my = (y + oy) * 0.5;\n        temp.push([ox, oy, mx, my]);\n        context.quadraticCurveTo(ox, oy, mx, my);\n        ox = x;\n        oy = y;\n      }\n\n      length = data.length;\n      context.quadraticCurveTo(data[length - 4], data[length - 3], data[length - 2], data[length - 1]);\n      return temp;\n    }\n  }]);\n\n  return Catenary;\n}();\n\nexports.default = Catenary;","map":{"version":3,"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_Point","require","_Point2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","TypeError","EPSILON","Catenary","_ref","arguments","undefined","_ref$segments","segments","_ref$iterationLimit","iterationLimit","p1","p2","drawToCanvas","context","point1","point2","chainLength","update","isFlipped","x","distance","getDistanceTo","curveData","isStraight","diff","h","v","y","a","getCatenaryParameter","Math","log","cosh","offsetX","offsetY","getCurve","mx","my","drawLine","drawCurve","limit","m","sqrt","acosh","prevx","count","abs","sinh","data","d","push","moveTo","lineTo","ox","oy","temp","quadraticCurveTo"],"sources":["/Users/vladikumpan/draw-guess/node_modules/catenary-curve/lib/Catenary.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\niven two points and a length, calculate and draw the catenary.\nnavaScript implementation:\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Copyright (c) 2018 Jan Hug <me@dulnan.net>\neleased under the MIT license.\nnnnriginal ActionScript implementation:\nopyright poiasd ( http://wonderfl.net/user/poiasd )\nicense ( http://www.opensource.org/licenses/mit-license.php )\nownloaded from: http://wonderfl.net/c/8Bnl\nnn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * \nrchived by and downloaded from:\nhttp://wa.zozuar.org/code.php?c=8Bnl\nn\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EPSILON = 1e-6;\n\nvar Catenary = function () {\n  /**\n   * constructor\n   *\n   * @param {Object} settings\n   * @param {Number} settings.segments Number of segments of the chain.\n   * @param {Number} settings.iterationLimit Maximum amount iterations for getting catenary parameters.\n   */\n  function Catenary() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$segments = _ref.segments,\n        segments = _ref$segments === undefined ? 50 : _ref$segments,\n        _ref$iterationLimit = _ref.iterationLimit,\n        iterationLimit = _ref$iterationLimit === undefined ? 100 : _ref$iterationLimit;\n\n    _classCallCheck(this, Catenary);\n\n    this.p1 = new _Point2.default();\n    this.p2 = new _Point2.default();\n\n    this.segments = segments;\n    this.iterationLimit = iterationLimit;\n  }\n\n  /**\n   * Draws a catenary given two coordinates, a length and a context.\n   * \n   * @param {CanvasRenderingContext2D} context The canvas context to draw the catenary on to.\n   * @param {Point} p1 First point\n   * @param {Point} p2 Second point\n   * @param {Number} chainLength The length of the catenary\n   */\n\n\n  _createClass(Catenary, [{\n    key: 'drawToCanvas',\n    value: function drawToCanvas(context, point1, point2, chainLength) {\n      this.p1.update(point1);\n      this.p2.update(point2);\n\n      var isFlipped = this.p1.x > this.p2.x;\n\n      var p1 = isFlipped ? this.p2 : this.p1;\n      var p2 = isFlipped ? this.p1 : this.p2;\n\n      var distance = p1.getDistanceTo(p2);\n\n      var curveData = [];\n      var isStraight = true;\n\n      // Prevent \"expensive\" catenary calculations if it would only result\n      // in a straight line.\n      if (distance < chainLength) {\n        var diff = p2.x - p1.x;\n\n        // If the distance on the x axis of both points is too small, don't\n        // calculate a catenary.\n        if (diff > 0.01) {\n          var h = p2.x - p1.x;\n          var v = p2.y - p1.y;\n          var a = -this.getCatenaryParameter(h, v, chainLength, this.iterationLimit);\n          var x = (a * Math.log((chainLength + v) / (chainLength - v)) - h) * 0.5;\n          var y = a * Math.cosh(x / a);\n          var offsetX = p1.x - x;\n          var offsetY = p1.y - y;\n          curveData = this.getCurve(a, p1, p2, offsetX, offsetY, this.segments);\n          isStraight = false;\n        } else {\n          var mx = (p1.x + p2.x) * 0.5;\n          var my = (p1.y + p2.y + chainLength) * 0.5;\n\n          curveData = [[p1.x, p1.y], [mx, my], [p2.x, p2.y]];\n        }\n      } else {\n        curveData = [[p1.x, p1.y], [p2.x, p2.y]];\n      }\n\n      if (isStraight) {\n        this.drawLine(curveData, context);\n      } else {\n        this.drawCurve(curveData, context);\n      }\n\n      return curveData;\n    }\n\n    /**\n     * Determines catenary parameter.\n     * \n     * @param {Number} h Horizontal distance of both points.\n     * @param {Number} v Vertical distance of both points.\n     * @param {Number} length The catenary length.\n     * @param {Number} limit Maximum amount of iterations to find parameter.\n     */\n\n  }, {\n    key: 'getCatenaryParameter',\n    value: function getCatenaryParameter(h, v, length, limit) {\n      var m = Math.sqrt(length * length - v * v) / h;\n      var x = Math.acosh(m) + 1;\n      var prevx = -1;\n      var count = 0;\n\n      while (Math.abs(x - prevx) > EPSILON && count < limit) {\n        prevx = x;\n        x = x - (Math.sinh(x) - m * x) / (Math.cosh(x) - m);\n        count++;\n      }\n\n      return h / (2 * x);\n    }\n\n    /**\n     * Calculate the catenary curve.\n     * Increasing the segments value will produce a catenary closer\n     * to reality, but will require more calcluations.\n     * \n     * @param {Number} a The catenary parameter.\n     * @param {Point} p1 First point\n     * @param {Point} p2 Second point\n     * @param {Number} offsetX The calculated offset on the x axis.\n     * @param {Number} offsetY The calculated offset on the y axis.\n     * @param {Number} segments How many \"parts\" the chain should be made of.\n     */\n\n  }, {\n    key: 'getCurve',\n    value: function getCurve(a, p1, p2, offsetX, offsetY, segments) {\n      var data = [p1.x, a * Math.cosh((p1.x - offsetX) / a) + offsetY];\n\n      var d = p2.x - p1.x;\n      var length = segments - 1;\n\n      for (var i = 0; i < length; i++) {\n        var x = p1.x + d * (i + 0.5) / length;\n        var y = a * Math.cosh((x - offsetX) / a) + offsetY;\n        data.push(x, y);\n      }\n\n      data.push(p2.x, a * Math.cosh((p2.x - offsetX) / a) + offsetY);\n\n      return data;\n    }\n\n    /**\n     * Draws a straight line between two points.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     */\n\n  }, {\n    key: 'drawLine',\n    value: function drawLine(data, context) {\n      context.moveTo(data[0][0], data[0][1]);\n\n      context.lineTo(data[1][0], data[1][1]);\n    }\n\n    /**\n     * Draws a quadratic curve between every calculated catenary segment,\n     * so that the segments don't look like straight lines.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     * \n     * @returns {Array} The original segment coordinates.\n     */\n\n  }, {\n    key: 'drawCurve',\n    value: function drawCurve(data, context) {\n      var length = data.length * 0.5 - 1;\n      var ox = data[2];\n      var oy = data[3];\n\n      var temp = [];\n\n      context.moveTo(data[0], data[1]);\n\n      for (var i = 2; i < length; i++) {\n        var x = data[i * 2];\n        var y = data[i * 2 + 1];\n        var mx = (x + ox) * 0.5;\n        var my = (y + oy) * 0.5;\n        temp.push([ox, oy, mx, my]);\n        context.quadraticCurveTo(ox, oy, mx, my);\n        ox = x;\n        oy = y;\n      }\n\n      length = data.length;\n      context.quadraticCurveTo(data[length - 4], data[length - 3], data[length - 2], data[length - 1]);\n\n      return temp;\n    }\n  }]);\n\n  return Catenary;\n}();\n\nexports.default = Catenary;"],"mappings":"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"},"metadata":{},"sourceType":"script"}