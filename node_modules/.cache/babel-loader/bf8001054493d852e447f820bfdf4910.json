{"ast":null,"code":"var _this = this;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar TOUCH_SLOP = 10;\nvar PINCH_TIMEOUT_MS = 250;\n\nvar SUPPRESS_SCROLL = function SUPPRESS_SCROLL(e) {\n  // No zooming while drawing, but we'll cancel the scroll event.\n  e.preventDefault();\n  return _this;\n};\n/**\n * The default state for the interaction state machine. Supports zoom and\n * initiating pan and drawing actions.\n */\n\n\nexport var DefaultState = function DefaultState() {\n  var _this2 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", function (e, canvasDraw) {\n    var _canvasDraw$props = canvasDraw.props,\n        disabled = _canvasDraw$props.disabled,\n        enablePanAndZoom = _canvasDraw$props.enablePanAndZoom,\n        mouseZoomFactor = _canvasDraw$props.mouseZoomFactor;\n\n    if (disabled) {\n      return new DisabledState();\n    } else if (enablePanAndZoom && e.ctrlKey) {\n      e.preventDefault();\n      canvasDraw.coordSystem.scaleAtClientPoint(mouseZoomFactor * e.deltaY, clientPointFromEvent(e));\n    }\n\n    return _this2;\n  });\n\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return new DisabledState();\n    } else if (e.ctrlKey && canvasDraw.props.enablePanAndZoom) {\n      return new PanState().handleDrawStart(e, canvasDraw);\n    } else {\n      return new WaitForPinchState().handleDrawStart(e, canvasDraw);\n    }\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return new DisabledState();\n    } else {\n      var _viewPointFromEvent = viewPointFromEvent(canvasDraw.coordSystem, e),\n          x = _viewPointFromEvent.x,\n          y = _viewPointFromEvent.y;\n\n      canvasDraw.lazy.update({\n        x: x,\n        y: y\n      });\n      return _this2;\n    }\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\n    return canvasDraw.props.disabled ? new DisabledState() : _this2;\n  });\n};\n;\n/**\n * This state is used as long as the disabled prop is active. It ignores all\n * events and doesn't prevent default actions. The disabled state can only be\n * triggered from the default state (i.e., while no action is actively being\n * performed).\n */\n\nexport var DisabledState = function DisabledState() {\n  var _this3 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return _this3;\n    } else {\n      return new DefaultState().handleMouseWheel(e, canvasDraw);\n    }\n  });\n\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return _this3;\n    } else {\n      return new DefaultState().handleDrawStart(e, canvasDraw);\n    }\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return _this3;\n    } else {\n      return new DefaultState().handleDrawMove(e, canvasDraw);\n    }\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return _this3;\n    } else {\n      return new DefaultState().handleDrawEnd(e, canvasDraw);\n    }\n  });\n};\n/**\n * This state is active as long as the user is panning the image. This state is\n * retained until the pan ceases.\n */\n\nexport var PanState = function PanState() {\n  var _this4 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    e.preventDefault();\n    _this4.dragStart = clientPointFromEvent(e);\n    _this4.panStart = {\n      x: canvasDraw.coordSystem.x,\n      y: canvasDraw.coordSystem.y\n    };\n    return _this4;\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    var _clientPointFromEvent = clientPointFromEvent(e),\n        clientX = _clientPointFromEvent.clientX,\n        clientY = _clientPointFromEvent.clientY;\n\n    var dx = clientX - _this4.dragStart.clientX;\n    var dy = clientY - _this4.dragStart.clientY;\n    canvasDraw.coordSystem.setView({\n      x: _this4.panStart.x + dx,\n      y: _this4.panStart.y + dy\n    });\n    return _this4;\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function () {\n    return new DefaultState();\n  });\n};\n/**\n * This state is active when the user has initiated the drawing action but has\n * not yet created any lines. We use this state to try and detect a second touch\n * event to initiate a pinch-zoom action. We'll give up on that if enough time\n * or movement happens without a second touch.\n */\n\nexport var WaitForPinchState = function WaitForPinchState() {\n  var _this5 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    var enablePanAndZoom = canvasDraw.props.enablePanAndZoom;\n    e.preventDefault(); // We're going to transition immediately into lazy-drawing mode if\n    // pan-and-zoom isn't enabled or if this event wasn't triggered by a touch.\n\n    if (!e.touches || !e.touches.length || !enablePanAndZoom) {\n      return new DrawingState().handleDrawStart(e, canvasDraw);\n    } // If we already have two touch events, we can move straight into pinch/pan\n\n\n    if (enablePanAndZoom && e.touches && e.touches.length >= 2) {\n      return new ScaleOrPanState().handleDrawStart(e, canvasDraw);\n    }\n\n    return _this5.handleDrawMove(e, canvasDraw);\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault(); // If we have two touches, move to pinch/pan (we don't have to recheck\n    // whether zoom is enabled because that happend in draw start).\n\n    if (e.touches && e.touches.length >= 2) {\n      // Use the start draw to handler to transition.\n      return new ScaleOrPanState().handleDrawStart(e, canvasDraw);\n    }\n\n    var clientPt = clientPointFromEvent(e);\n\n    _this5.deferredPoints.push(clientPt); // If we've already moved far enough, or if enough time has passed, give up\n    // and switch over to drawing.\n\n\n    if (new Date().valueOf() - _this5.startTimestamp < PINCH_TIMEOUT_MS) {\n      if (_this5.startClientPoint === null) {\n        _this5.startClientPoint = clientPt;\n      } // Note that we're using \"manhattan distance\" rather than computing a\n      // hypotenuse here as a cheap approximation\n\n\n      var d = Math.abs(clientPt.clientX - _this5.startClientPoint.clientX) + Math.abs(clientPt.clientY - _this5.startClientPoint.clientY);\n\n      if (d < TOUCH_SLOP) {\n        // We're not ready to give up yet.\n        return _this5;\n      }\n    } // Okay, give up and start drawing.\n\n\n    return _this5.issueDeferredPoints(canvasDraw);\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\n    // The user stopped drawing before we decided what to do. Just treat this as\n    // if they were drawing all along.\n    return _this5.issueDeferredPoints(canvasDraw).handleDrawEnd(e, canvasDraw);\n  });\n\n  _defineProperty(this, \"issueDeferredPoints\", function (canvasDraw) {\n    // Time to give up. Play our deferred points out to the drawing state.\n    // The first point will have been a start draw.\n    var nextState = new DrawingState();\n\n    for (var i = 0; i < _this5.deferredPoints.length; i++) {\n      var deferredPt = _this5.deferredPoints[i];\n      var syntheticEvt = new SyntheticEvent(deferredPt);\n      var func = i === 0 ? nextState.handleDrawStart : nextState.handleDrawMove;\n      nextState = func(syntheticEvt, canvasDraw);\n    }\n\n    return nextState;\n  });\n\n  this.startClientPoint = null;\n  this.startTimestamp = new Date().valueOf();\n  this.deferredPoints = [];\n};\n/**\n * This state is active when the user has added at least two touch points but we\n * don't yet know if they intend to pan or zoom.\n */\n\nexport var ScaleOrPanState = function ScaleOrPanState() {\n  var _this6 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n\n    _this6.start = _this6.getTouchMetrics(e);\n    _this6.panStart = {\n      x: canvasDraw.coordSystem.x,\n      y: canvasDraw.coordSystem.y\n    };\n    _this6.scaleStart = canvasDraw.coordSystem.scale;\n    return _this6;\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n\n    var _this6$recentMetrics = _this6.recentMetrics = _this6.getTouchMetrics(e),\n        centroid = _this6$recentMetrics.centroid,\n        distance = _this6$recentMetrics.distance; // Switch to scaling?\n\n\n    var dd = Math.abs(distance - _this6.start.distance);\n\n    if (dd >= TOUCH_SLOP) {\n      return new TouchScaleState(_this6).handleDrawMove(e, canvasDraw);\n    } // Switch to panning?\n\n\n    var dx = centroid.clientX - _this6.start.centroid.clientX;\n    var dy = centroid.clientY - _this6.start.centroid.clientY;\n    var dc = Math.abs(dx) + Math.abs(dy);\n\n    if (dc >= TOUCH_SLOP) {\n      return new TouchPanState(_this6).handleDrawMove(e, canvasDraw);\n    } // Not enough movement yet\n\n\n    return _this6;\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function () {\n    return new DefaultState();\n  });\n\n  _defineProperty(this, \"getTouchMetrics\", function (e) {\n    var _clientPointFromEvent2 = clientPointFromEvent(e.touches[0]),\n        t1x = _clientPointFromEvent2.clientX,\n        t1y = _clientPointFromEvent2.clientY;\n\n    var _clientPointFromEvent3 = clientPointFromEvent(e.touches[1]),\n        t2x = _clientPointFromEvent3.clientX,\n        t2y = _clientPointFromEvent3.clientY;\n\n    var dx = t2x - t1x;\n    var dy = t2y - t1y;\n    return {\n      t1: {\n        clientX: t1x,\n        clientY: t1y\n      },\n      t2: {\n        clientX: t2x,\n        clientY: t2y\n      },\n      distance: Math.sqrt(dx * dx + dy * dy),\n      centroid: {\n        clientX: (t1x + t2x) / 2.0,\n        clientY: (t1y + t2y) / 2.0\n      }\n    };\n  });\n};\n/**\n * The user is actively using touch gestures to pan the image.\n */\n\nexport var TouchPanState = function TouchPanState(scaleOrPanState) {\n  var _this7 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n\n  _defineProperty(this, \"handleDrawStart\", function () {\n    return _this7;\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n\n    var ref = _this7.scaleOrPanState;\n\n    var _ref$recentMetrics = ref.recentMetrics = ref.getTouchMetrics(e),\n        centroid = _ref$recentMetrics.centroid,\n        distance = _ref$recentMetrics.distance;\n\n    var dx = centroid.clientX - ref.start.centroid.clientX;\n    var dy = centroid.clientY - ref.start.centroid.clientY;\n    canvasDraw.setView({\n      x: ref.panStart.x + dx,\n      y: ref.panStart.y + dy\n    });\n    return _this7;\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function () {\n    return new DefaultState();\n  });\n\n  this.scaleOrPanState = scaleOrPanState;\n};\n/**\n * The user is actively using touch gestures to scale the drawing.\n */\n\nexport var TouchScaleState = function TouchScaleState(scaleOrPanState) {\n  var _this8 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n\n  _defineProperty(this, \"handleDrawStart\", function () {\n    return _this8;\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n\n    var ref = _this8.scaleOrPanState;\n\n    var _ref$recentMetrics2 = ref.recentMetrics = ref.getTouchMetrics(e),\n        centroid = _ref$recentMetrics2.centroid,\n        distance = _ref$recentMetrics2.distance;\n\n    var targetScale = ref.scaleStart * (distance / ref.start.distance);\n    var dScale = targetScale - canvasDraw.coordSystem.scale;\n    canvasDraw.coordSystem.scaleAtClientPoint(dScale, centroid);\n    return _this8;\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function () {\n    return new DefaultState();\n  });\n\n  this.scaleOrPanState = scaleOrPanState;\n};\n/**\n * This state is active when the user is drawing.\n */\n\nexport var DrawingState = function DrawingState() {\n  var _this9 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    if (e.touches && e.touches.length) {\n      // on touch, set catenary position to touch pos\n      var _viewPointFromEvent2 = viewPointFromEvent(canvasDraw.coordSystem, e),\n          x = _viewPointFromEvent2.x,\n          y = _viewPointFromEvent2.y;\n\n      canvasDraw.lazy.update({\n        x: x,\n        y: y\n      }, {\n        both: true\n      });\n    }\n\n    return _this9.handleDrawMove(e, canvasDraw);\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    var _viewPointFromEvent3 = viewPointFromEvent(canvasDraw.coordSystem, e),\n        x = _viewPointFromEvent3.x,\n        y = _viewPointFromEvent3.y;\n\n    canvasDraw.lazy.update({\n      x: x,\n      y: y\n    });\n    var isDisabled = !canvasDraw.lazy.isEnabled();\n\n    if (!_this9.isDrawing || isDisabled) {\n      // Start drawing and add point\n      canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\n      _this9.isDrawing = true;\n    } // Add new point\n\n\n    canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject())); // Draw current points\n\n    canvasDraw.drawPoints({\n      points: canvasDraw.points,\n      brushColor: canvasDraw.props.brushColor,\n      brushRadius: canvasDraw.props.brushRadius\n    });\n    return _this9;\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\n    e.preventDefault(); // Draw to this end pos\n\n    _this9.handleDrawMove(e, canvasDraw);\n\n    canvasDraw.saveLine();\n    return new DefaultState();\n  });\n\n  this.isDrawing = false;\n};\nexport var SyntheticEvent = function SyntheticEvent(_ref) {\n  var clientX = _ref.clientX,\n      clientY = _ref.clientY;\n\n  _defineProperty(this, \"preventDefault\", function () {});\n\n  this.clientX = clientX;\n  this.clientY = clientY;\n  this.touches = [{\n    clientX: clientX,\n    clientY: clientY\n  }];\n};\nexport function clientPointFromEvent(e) {\n  // use cursor pos as default\n  var clientX = e.clientX;\n  var clientY = e.clientY; // use first touch if available\n\n  if (e.changedTouches && e.changedTouches.length > 0) {\n    clientX = e.changedTouches[0].clientX;\n    clientY = e.changedTouches[0].clientY;\n  }\n\n  return {\n    clientX: clientX,\n    clientY: clientY\n  };\n}\nexport function viewPointFromEvent(coordSystem, e) {\n  return coordSystem.clientPointToViewPoint(clientPointFromEvent(e));\n}","map":{"version":3,"names":["_this","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","TOUCH_SLOP","PINCH_TIMEOUT_MS","SUPPRESS_SCROLL","e","preventDefault","DefaultState","_this2","canvasDraw","_canvasDraw$props","props","disabled","enablePanAndZoom","mouseZoomFactor","DisabledState","ctrlKey","coordSystem","scaleAtClientPoint","deltaY","clientPointFromEvent","PanState","handleDrawStart","WaitForPinchState","_viewPointFromEvent","viewPointFromEvent","x","y","lazy","update","_this3","handleMouseWheel","handleDrawMove","handleDrawEnd","_this4","bind","dragStart","panStart","_clientPointFromEvent","clientX","clientY","dx","dy","setView","_this5","touches","length","DrawingState","ScaleOrPanState","clientPt","deferredPoints","push","Date","valueOf","startTimestamp","startClientPoint","d","Math","abs","issueDeferredPoints","nextState","i","deferredPt","syntheticEvt","SyntheticEvent","func","_this6","start","getTouchMetrics","scaleStart","scale","_this6$recentMetrics","recentMetrics","centroid","distance","dd","TouchScaleState","dc","TouchPanState","_clientPointFromEvent2","t1x","t1y","_clientPointFromEvent3","t2x","t2y","t1","t2","sqrt","scaleOrPanState","_this7","ref","_ref$recentMetrics","_this8","_ref$recentMetrics2","targetScale","dScale","_this9","_viewPointFromEvent2","both","_viewPointFromEvent3","isDisabled","isEnabled","isDrawing","points","clampPointToDocument","brush","toObject","drawPoints","brushColor","brushRadius","saveLine","_ref","changedTouches","clientPointToViewPoint"],"sources":["/Users/vladikumpan/draw-guess/node_modules/react-canvas-draw/es/interactionStateMachine.js"],"sourcesContent":["var _this = this;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar TOUCH_SLOP = 10;\nvar PINCH_TIMEOUT_MS = 250;\n\nvar SUPPRESS_SCROLL = function SUPPRESS_SCROLL(e) {\n  // No zooming while drawing, but we'll cancel the scroll event.\n  e.preventDefault();\n  return _this;\n};\n/**\n * The default state for the interaction state machine. Supports zoom and\n * initiating pan and drawing actions.\n */\n\n\nexport var DefaultState = function DefaultState() {\n  var _this2 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", function (e, canvasDraw) {\n    var _canvasDraw$props = canvasDraw.props,\n        disabled = _canvasDraw$props.disabled,\n        enablePanAndZoom = _canvasDraw$props.enablePanAndZoom,\n        mouseZoomFactor = _canvasDraw$props.mouseZoomFactor;\n\n    if (disabled) {\n      return new DisabledState();\n    } else if (enablePanAndZoom && e.ctrlKey) {\n      e.preventDefault();\n      canvasDraw.coordSystem.scaleAtClientPoint(mouseZoomFactor * e.deltaY, clientPointFromEvent(e));\n    }\n\n    return _this2;\n  });\n\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return new DisabledState();\n    } else if (e.ctrlKey && canvasDraw.props.enablePanAndZoom) {\n      return new PanState().handleDrawStart(e, canvasDraw);\n    } else {\n      return new WaitForPinchState().handleDrawStart(e, canvasDraw);\n    }\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return new DisabledState();\n    } else {\n      var _viewPointFromEvent = viewPointFromEvent(canvasDraw.coordSystem, e),\n          x = _viewPointFromEvent.x,\n          y = _viewPointFromEvent.y;\n\n      canvasDraw.lazy.update({\n        x: x,\n        y: y\n      });\n      return _this2;\n    }\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\n    return canvasDraw.props.disabled ? new DisabledState() : _this2;\n  });\n};\n;\n/**\n * This state is used as long as the disabled prop is active. It ignores all\n * events and doesn't prevent default actions. The disabled state can only be\n * triggered from the default state (i.e., while no action is actively being\n * performed).\n */\n\nexport var DisabledState = function DisabledState() {\n  var _this3 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return _this3;\n    } else {\n      return new DefaultState().handleMouseWheel(e, canvasDraw);\n    }\n  });\n\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return _this3;\n    } else {\n      return new DefaultState().handleDrawStart(e, canvasDraw);\n    }\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return _this3;\n    } else {\n      return new DefaultState().handleDrawMove(e, canvasDraw);\n    }\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\n    if (canvasDraw.props.disabled) {\n      return _this3;\n    } else {\n      return new DefaultState().handleDrawEnd(e, canvasDraw);\n    }\n  });\n};\n/**\n * This state is active as long as the user is panning the image. This state is\n * retained until the pan ceases.\n */\n\nexport var PanState = function PanState() {\n  var _this4 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    e.preventDefault();\n    _this4.dragStart = clientPointFromEvent(e);\n    _this4.panStart = {\n      x: canvasDraw.coordSystem.x,\n      y: canvasDraw.coordSystem.y\n    };\n    return _this4;\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    var _clientPointFromEvent = clientPointFromEvent(e),\n        clientX = _clientPointFromEvent.clientX,\n        clientY = _clientPointFromEvent.clientY;\n\n    var dx = clientX - _this4.dragStart.clientX;\n    var dy = clientY - _this4.dragStart.clientY;\n    canvasDraw.coordSystem.setView({\n      x: _this4.panStart.x + dx,\n      y: _this4.panStart.y + dy\n    });\n    return _this4;\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function () {\n    return new DefaultState();\n  });\n};\n/**\n * This state is active when the user has initiated the drawing action but has\n * not yet created any lines. We use this state to try and detect a second touch\n * event to initiate a pinch-zoom action. We'll give up on that if enough time\n * or movement happens without a second touch.\n */\n\nexport var WaitForPinchState = function WaitForPinchState() {\n  var _this5 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    var enablePanAndZoom = canvasDraw.props.enablePanAndZoom;\n    e.preventDefault(); // We're going to transition immediately into lazy-drawing mode if\n    // pan-and-zoom isn't enabled or if this event wasn't triggered by a touch.\n\n    if (!e.touches || !e.touches.length || !enablePanAndZoom) {\n      return new DrawingState().handleDrawStart(e, canvasDraw);\n    } // If we already have two touch events, we can move straight into pinch/pan\n\n\n    if (enablePanAndZoom && e.touches && e.touches.length >= 2) {\n      return new ScaleOrPanState().handleDrawStart(e, canvasDraw);\n    }\n\n    return _this5.handleDrawMove(e, canvasDraw);\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault(); // If we have two touches, move to pinch/pan (we don't have to recheck\n    // whether zoom is enabled because that happend in draw start).\n\n    if (e.touches && e.touches.length >= 2) {\n      // Use the start draw to handler to transition.\n      return new ScaleOrPanState().handleDrawStart(e, canvasDraw);\n    }\n\n    var clientPt = clientPointFromEvent(e);\n\n    _this5.deferredPoints.push(clientPt); // If we've already moved far enough, or if enough time has passed, give up\n    // and switch over to drawing.\n\n\n    if (new Date().valueOf() - _this5.startTimestamp < PINCH_TIMEOUT_MS) {\n      if (_this5.startClientPoint === null) {\n        _this5.startClientPoint = clientPt;\n      } // Note that we're using \"manhattan distance\" rather than computing a\n      // hypotenuse here as a cheap approximation\n\n\n      var d = Math.abs(clientPt.clientX - _this5.startClientPoint.clientX) + Math.abs(clientPt.clientY - _this5.startClientPoint.clientY);\n\n      if (d < TOUCH_SLOP) {\n        // We're not ready to give up yet.\n        return _this5;\n      }\n    } // Okay, give up and start drawing.\n\n\n    return _this5.issueDeferredPoints(canvasDraw);\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\n    // The user stopped drawing before we decided what to do. Just treat this as\n    // if they were drawing all along.\n    return _this5.issueDeferredPoints(canvasDraw).handleDrawEnd(e, canvasDraw);\n  });\n\n  _defineProperty(this, \"issueDeferredPoints\", function (canvasDraw) {\n    // Time to give up. Play our deferred points out to the drawing state.\n    // The first point will have been a start draw.\n    var nextState = new DrawingState();\n\n    for (var i = 0; i < _this5.deferredPoints.length; i++) {\n      var deferredPt = _this5.deferredPoints[i];\n      var syntheticEvt = new SyntheticEvent(deferredPt);\n      var func = i === 0 ? nextState.handleDrawStart : nextState.handleDrawMove;\n      nextState = func(syntheticEvt, canvasDraw);\n    }\n\n    return nextState;\n  });\n\n  this.startClientPoint = null;\n  this.startTimestamp = new Date().valueOf();\n  this.deferredPoints = [];\n};\n/**\n * This state is active when the user has added at least two touch points but we\n * don't yet know if they intend to pan or zoom.\n */\n\nexport var ScaleOrPanState = function ScaleOrPanState() {\n  var _this6 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n\n    _this6.start = _this6.getTouchMetrics(e);\n    _this6.panStart = {\n      x: canvasDraw.coordSystem.x,\n      y: canvasDraw.coordSystem.y\n    };\n    _this6.scaleStart = canvasDraw.coordSystem.scale;\n    return _this6;\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n\n    var _this6$recentMetrics = _this6.recentMetrics = _this6.getTouchMetrics(e),\n        centroid = _this6$recentMetrics.centroid,\n        distance = _this6$recentMetrics.distance; // Switch to scaling?\n\n\n    var dd = Math.abs(distance - _this6.start.distance);\n\n    if (dd >= TOUCH_SLOP) {\n      return new TouchScaleState(_this6).handleDrawMove(e, canvasDraw);\n    } // Switch to panning?\n\n\n    var dx = centroid.clientX - _this6.start.centroid.clientX;\n    var dy = centroid.clientY - _this6.start.centroid.clientY;\n    var dc = Math.abs(dx) + Math.abs(dy);\n\n    if (dc >= TOUCH_SLOP) {\n      return new TouchPanState(_this6).handleDrawMove(e, canvasDraw);\n    } // Not enough movement yet\n\n\n    return _this6;\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function () {\n    return new DefaultState();\n  });\n\n  _defineProperty(this, \"getTouchMetrics\", function (e) {\n    var _clientPointFromEvent2 = clientPointFromEvent(e.touches[0]),\n        t1x = _clientPointFromEvent2.clientX,\n        t1y = _clientPointFromEvent2.clientY;\n\n    var _clientPointFromEvent3 = clientPointFromEvent(e.touches[1]),\n        t2x = _clientPointFromEvent3.clientX,\n        t2y = _clientPointFromEvent3.clientY;\n\n    var dx = t2x - t1x;\n    var dy = t2y - t1y;\n    return {\n      t1: {\n        clientX: t1x,\n        clientY: t1y\n      },\n      t2: {\n        clientX: t2x,\n        clientY: t2y\n      },\n      distance: Math.sqrt(dx * dx + dy * dy),\n      centroid: {\n        clientX: (t1x + t2x) / 2.0,\n        clientY: (t1y + t2y) / 2.0\n      }\n    };\n  });\n};\n/**\n * The user is actively using touch gestures to pan the image.\n */\n\nexport var TouchPanState = function TouchPanState(scaleOrPanState) {\n  var _this7 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n\n  _defineProperty(this, \"handleDrawStart\", function () {\n    return _this7;\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n\n    var ref = _this7.scaleOrPanState;\n\n    var _ref$recentMetrics = ref.recentMetrics = ref.getTouchMetrics(e),\n        centroid = _ref$recentMetrics.centroid,\n        distance = _ref$recentMetrics.distance;\n\n    var dx = centroid.clientX - ref.start.centroid.clientX;\n    var dy = centroid.clientY - ref.start.centroid.clientY;\n    canvasDraw.setView({\n      x: ref.panStart.x + dx,\n      y: ref.panStart.y + dy\n    });\n    return _this7;\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function () {\n    return new DefaultState();\n  });\n\n  this.scaleOrPanState = scaleOrPanState;\n};\n/**\n * The user is actively using touch gestures to scale the drawing.\n */\n\nexport var TouchScaleState = function TouchScaleState(scaleOrPanState) {\n  var _this8 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n\n  _defineProperty(this, \"handleDrawStart\", function () {\n    return _this8;\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n\n    var ref = _this8.scaleOrPanState;\n\n    var _ref$recentMetrics2 = ref.recentMetrics = ref.getTouchMetrics(e),\n        centroid = _ref$recentMetrics2.centroid,\n        distance = _ref$recentMetrics2.distance;\n\n    var targetScale = ref.scaleStart * (distance / ref.start.distance);\n    var dScale = targetScale - canvasDraw.coordSystem.scale;\n    canvasDraw.coordSystem.scaleAtClientPoint(dScale, centroid);\n    return _this8;\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function () {\n    return new DefaultState();\n  });\n\n  this.scaleOrPanState = scaleOrPanState;\n};\n/**\n * This state is active when the user is drawing.\n */\n\nexport var DrawingState = function DrawingState() {\n  var _this9 = this;\n\n  _defineProperty(this, \"handleMouseWheel\", SUPPRESS_SCROLL.bind(this));\n\n  _defineProperty(this, \"handleDrawStart\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    if (e.touches && e.touches.length) {\n      // on touch, set catenary position to touch pos\n      var _viewPointFromEvent2 = viewPointFromEvent(canvasDraw.coordSystem, e),\n          x = _viewPointFromEvent2.x,\n          y = _viewPointFromEvent2.y;\n\n      canvasDraw.lazy.update({\n        x: x,\n        y: y\n      }, {\n        both: true\n      });\n    }\n\n    return _this9.handleDrawMove(e, canvasDraw);\n  });\n\n  _defineProperty(this, \"handleDrawMove\", function (e, canvasDraw) {\n    e.preventDefault();\n\n    var _viewPointFromEvent3 = viewPointFromEvent(canvasDraw.coordSystem, e),\n        x = _viewPointFromEvent3.x,\n        y = _viewPointFromEvent3.y;\n\n    canvasDraw.lazy.update({\n      x: x,\n      y: y\n    });\n    var isDisabled = !canvasDraw.lazy.isEnabled();\n\n    if (!_this9.isDrawing || isDisabled) {\n      // Start drawing and add point\n      canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\n      _this9.isDrawing = true;\n    } // Add new point\n\n\n    canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject())); // Draw current points\n\n    canvasDraw.drawPoints({\n      points: canvasDraw.points,\n      brushColor: canvasDraw.props.brushColor,\n      brushRadius: canvasDraw.props.brushRadius\n    });\n    return _this9;\n  });\n\n  _defineProperty(this, \"handleDrawEnd\", function (e, canvasDraw) {\n    e.preventDefault(); // Draw to this end pos\n\n    _this9.handleDrawMove(e, canvasDraw);\n\n    canvasDraw.saveLine();\n    return new DefaultState();\n  });\n\n  this.isDrawing = false;\n};\nexport var SyntheticEvent = function SyntheticEvent(_ref) {\n  var clientX = _ref.clientX,\n      clientY = _ref.clientY;\n\n  _defineProperty(this, \"preventDefault\", function () {});\n\n  this.clientX = clientX;\n  this.clientY = clientY;\n  this.touches = [{\n    clientX: clientX,\n    clientY: clientY\n  }];\n};\nexport function clientPointFromEvent(e) {\n  // use cursor pos as default\n  var clientX = e.clientX;\n  var clientY = e.clientY; // use first touch if available\n\n  if (e.changedTouches && e.changedTouches.length > 0) {\n    clientX = e.changedTouches[0].clientX;\n    clientY = e.changedTouches[0].clientY;\n  }\n\n  return {\n    clientX: clientX,\n    clientY: clientY\n  };\n}\nexport function viewPointFromEvent(coordSystem, e) {\n  return coordSystem.clientPointToViewPoint(clientPointFromEvent(e));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}