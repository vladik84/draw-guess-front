{"ast":null,"code":"var _jsxFileName = \"/Users/vladikumpan/draw-guess/src/components/Pages/SelectWord.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectWord = props => {\n  _s();\n\n  var eazy = require(\"random-words\");\n\n  var medium = require(\"random-words\");\n\n  var hard = require(\"random-words\");\n\n  var firstWord = useMemo(() => eazy({\n    exactly: 1,\n    minLength: 3,\n    maxLength: 4\n  }), []);\n  var secondWord = useMemo(() => medium({\n    exactly: 1,\n    Length: 5\n  }), []);\n  var thirdWord = hard({\n    exactly: 1,\n    minLength: 6\n  });\n  const [isSelected, setIsSelected] = useState(false);\n  const [playerSelection, setPlayerSelection] = useState(\"\");\n\n  const selectedHandler = event => {\n    setIsSelected(true);\n    setPlayerSelection(event.target.value);\n    props.onSelectWord(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: selectedHandler,\n        value: firstWord,\n        children: firstWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: selectedHandler,\n        value: secondWord,\n        children: secondWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: selectedHandler,\n        value: thirdWord,\n        children: thirdWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), isSelected && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Please draw: \", playerSelection]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectWord, \"+eAtDmH+zivUmukzMIbvnfgtcGE=\");\n\n_c = SelectWord;\nexport default SelectWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectWord\");","map":{"version":3,"names":["React","useState","useMemo","SelectWord","props","eazy","require","medium","hard","firstWord","exactly","minLength","maxLength","secondWord","Length","thirdWord","isSelected","setIsSelected","playerSelection","setPlayerSelection","selectedHandler","event","target","value","onSelectWord"],"sources":["/Users/vladikumpan/draw-guess/src/components/Pages/SelectWord.js"],"sourcesContent":["import React, { useState, useMemo} from \"react\";\n\nconst SelectWord = (props) => {\n\n  var eazy = require(\"random-words\");\n  var medium = require(\"random-words\");\n  var hard = require(\"random-words\");\n\n  var firstWord = useMemo( () => eazy({ exactly: 1, minLength: 3, maxLength: 4 }), []);\n  var secondWord = useMemo ( ()=> medium({ exactly: 1, Length: 5 }),[]);\n  var thirdWord = hard({ exactly: 1, minLength: 6 });\n\n  const [isSelected, setIsSelected] = useState(false);\n  const [playerSelection, setPlayerSelection] = useState(\"\");\n\n  const selectedHandler = (event) => {\n    setIsSelected(true);\n    setPlayerSelection(event.target.value);\n    props.onSelectWord(event.target.value);\n  };\n\n  return (\n    <div>\n      {!isSelected && (\n        <div>\n          <button onClick={selectedHandler} value={firstWord}>\n            {firstWord}\n          </button>\n          <button onClick={selectedHandler} value={secondWord}>\n            {secondWord}\n          </button>\n          <button onClick={selectedHandler} value={thirdWord}>\n            {thirdWord}\n          </button>\n        </div>\n      )}\n      {isSelected && <h3>Please draw: {playerSelection}</h3>}\n    </div>\n  );\n};\n\nexport default SelectWord;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAwC,OAAxC;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAE5B,IAAIC,IAAI,GAAGC,OAAO,CAAC,cAAD,CAAlB;;EACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAApB;;EACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,cAAD,CAAlB;;EAEA,IAAIG,SAAS,GAAGP,OAAO,CAAE,MAAMG,IAAI,CAAC;IAAEK,OAAO,EAAE,CAAX;IAAcC,SAAS,EAAE,CAAzB;IAA4BC,SAAS,EAAE;EAAvC,CAAD,CAAZ,EAA0D,EAA1D,CAAvB;EACA,IAAIC,UAAU,GAAGX,OAAO,CAAG,MAAKK,MAAM,CAAC;IAAEG,OAAO,EAAE,CAAX;IAAcI,MAAM,EAAE;EAAtB,CAAD,CAAd,EAA0C,EAA1C,CAAxB;EACA,IAAIC,SAAS,GAAGP,IAAI,CAAC;IAAEE,OAAO,EAAE,CAAX;IAAcC,SAAS,EAAE;EAAzB,CAAD,CAApB;EAEA,MAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,EAAD,CAAtD;;EAEA,MAAMmB,eAAe,GAAIC,KAAD,IAAW;IACjCJ,aAAa,CAAC,IAAD,CAAb;IACAE,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;IACAnB,KAAK,CAACoB,YAAN,CAAmBH,KAAK,CAACC,MAAN,CAAaC,KAAhC;EACD,CAJD;;EAMA,oBACE;IAAA,WACG,CAACP,UAAD,iBACC;MAAA,wBACE;QAAQ,OAAO,EAAEI,eAAjB;QAAkC,KAAK,EAAEX,SAAzC;QAAA,UACGA;MADH;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAQ,OAAO,EAAEW,eAAjB;QAAkC,KAAK,EAAEP,UAAzC;QAAA,UACGA;MADH;QAAA;QAAA;QAAA;MAAA,QAJF,eAOE;QAAQ,OAAO,EAAEO,eAAjB;QAAkC,KAAK,EAAEL,SAAzC;QAAA,UACGA;MADH;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAcGC,UAAU,iBAAI;MAAA,4BAAkBE,eAAlB;IAAA;MAAA;MAAA;MAAA;IAAA,QAdjB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CArCD;;GAAMf,U;;KAAAA,U;AAuCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}