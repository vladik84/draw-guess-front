{"ast":null,"code":"var _jsxFileName = \"/Users/vladikumpan/draw-guess/src/components/Pages/GameManager.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { getPlayers, getDraw } from \"../axios/axiosFunctions\";\nimport { useQuery } from \"react-query\";\nimport Game from \"./Game\";\nimport Guess from \"./Guess\";\nimport { DrawingState } from \"react-canvas-draw/lib/interactionStateMachine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQueryParams() {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\n_s(useQueryParams, \"I+9F+Vhfmc3otMLqUKFlYflxhf8=\", false, function () {\n  return [useLocation];\n});\n\nconst GameManager = () => {\n  _s2();\n\n  const [isFinishedDrawing, setIsFinishedDrawing] = useState(false);\n  const [playerDrawing, setPlayerDrawing] = useState();\n  const [playerSelection, setPlayerSelection] = useState(\"\");\n\n  const onFinishDrawingHandler = props => {\n    setPlayerDrawing(props[0]);\n    setPlayerSelection(props[1]);\n    console.log(\"set to true\");\n    setIsFinishedDrawing(true);\n  };\n\n  const params = useQueryParams();\n  const role = params.get(\"role\");\n  const gameId = params.get(\"gameId\");\n  const drawing = params.get(\"draw\");\n  const {\n    data\n  } = useQuery(\"players\", () => getPlayers(gameId), {\n    refetchInterval: 2000\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(\"return in gamemanager\"), data && data.players === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"waiting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 38\n    }, this), data && data.players === 2 && role === \"drawing\" && /*#__PURE__*/_jsxDEV(Game, {\n      onPlayerFinishDrawing: onFinishDrawingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 60\n    }, this), data && data.players === 2 && role === \"guessing\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Wait for player to finish the drawing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 62\n    }, this), data && data.players === 2 && role === \"guessing\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"image is ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 62\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(GameManager, \"hgiCJNuCMl2oXXbAm19X0WXYDTk=\", false, function () {\n  return [useQueryParams, useQuery];\n});\n\n_c = GameManager;\nexport default GameManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameManager\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","axios","getPlayers","getDraw","useQuery","Game","Guess","DrawingState","useQueryParams","search","useMemo","URLSearchParams","GameManager","isFinishedDrawing","setIsFinishedDrawing","playerDrawing","setPlayerDrawing","playerSelection","setPlayerSelection","onFinishDrawingHandler","props","console","log","params","role","get","gameId","drawing","data","refetchInterval","players"],"sources":["/Users/vladikumpan/draw-guess/src/components/Pages/GameManager.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { getPlayers, getDraw} from \"../axios/axiosFunctions\";\nimport { useQuery } from \"react-query\";\nimport Game from \"./Game\";\nimport Guess from \"./Guess\";\nimport { DrawingState } from \"react-canvas-draw/lib/interactionStateMachine\";\n\nfunction useQueryParams() {\n    const { search } = useLocation();\n  \n    return React.useMemo(() => new URLSearchParams(search), [search]);\n  }\n\nconst GameManager = () => {\n\n    const [isFinishedDrawing, setIsFinishedDrawing] = useState(false);\n    const [playerDrawing, setPlayerDrawing] = useState();\n    const [playerSelection, setPlayerSelection] = useState(\"\");\n\n    const onFinishDrawingHandler = (props) => {\n        setPlayerDrawing(props[0]);\n        setPlayerSelection(props[1]);\n        console.log(\"set to true\")\n        setIsFinishedDrawing(true);\n        \n      };\n\n  const params = useQueryParams();\n  const role = params.get(\"role\");\n  const gameId = params.get(\"gameId\");\n  const drawing = params.get(\"draw\");\n  const { data } = useQuery(\"players\", () => getPlayers(gameId), {\n    refetchInterval: 2000,\n  });\n\n  return (\n    <div>\n    {console.log(\"return in gamemanager\")}\n      {data && data.players === 1 && <div>waiting</div>}\n      {data && data.players === 2 && role === \"drawing\" && <Game onPlayerFinishDrawing={onFinishDrawingHandler}/>}\n      {data && data.players === 2 && role === \"guessing\"  && <p>Wait for player to finish the drawing</p>}\n      {data && data.players === 2 && role === \"guessing\"  && <p>image is ready</p>}\n    </div>\n  );\n};\n\nexport default GameManager;\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAmC,yBAAnC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,YAAT,QAA6B,+CAA7B;;;AAEA,SAASC,cAAT,GAA0B;EAAA;;EACtB,MAAM;IAAEC;EAAF,IAAaT,WAAW,EAA9B;EAEA,OAAOH,KAAK,CAACa,OAAN,CAAc,MAAM,IAAIC,eAAJ,CAAoBF,MAApB,CAApB,EAAiD,CAACA,MAAD,CAAjD,CAAP;AACD;;GAJMD,c;UACcR,W;;;AAKvB,MAAMY,WAAW,GAAG,MAAM;EAAA;;EAEtB,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4ChB,QAAQ,CAAC,KAAD,CAA1D;EACA,MAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,EAAlD;EACA,MAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,EAAD,CAAtD;;EAEA,MAAMqB,sBAAsB,GAAIC,KAAD,IAAW;IACtCJ,gBAAgB,CAACI,KAAK,CAAC,CAAD,CAAN,CAAhB;IACAF,kBAAkB,CAACE,KAAK,CAAC,CAAD,CAAN,CAAlB;IACAC,OAAO,CAACC,GAAR,CAAY,aAAZ;IACAR,oBAAoB,CAAC,IAAD,CAApB;EAED,CANH;;EAQF,MAAMS,MAAM,GAAGf,cAAc,EAA7B;EACA,MAAMgB,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAW,MAAX,CAAb;EACA,MAAMC,MAAM,GAAGH,MAAM,CAACE,GAAP,CAAW,QAAX,CAAf;EACA,MAAME,OAAO,GAAGJ,MAAM,CAACE,GAAP,CAAW,MAAX,CAAhB;EACA,MAAM;IAAEG;EAAF,IAAWxB,QAAQ,CAAC,SAAD,EAAY,MAAMF,UAAU,CAACwB,MAAD,CAA5B,EAAsC;IAC7DG,eAAe,EAAE;EAD4C,CAAtC,CAAzB;EAIA,oBACE;IAAA,WACCR,OAAO,CAACC,GAAR,CAAY,uBAAZ,CADD,EAEGM,IAAI,IAAIA,IAAI,CAACE,OAAL,KAAiB,CAAzB,iBAA8B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFjC,EAGGF,IAAI,IAAIA,IAAI,CAACE,OAAL,KAAiB,CAAzB,IAA8BN,IAAI,KAAK,SAAvC,iBAAoD,QAAC,IAAD;MAAM,qBAAqB,EAAEL;IAA7B;MAAA;MAAA;MAAA;IAAA,QAHvD,EAIGS,IAAI,IAAIA,IAAI,CAACE,OAAL,KAAiB,CAAzB,IAA8BN,IAAI,KAAK,UAAvC,iBAAsD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJzD,EAKGI,IAAI,IAAIA,IAAI,CAACE,OAAL,KAAiB,CAAzB,IAA8BN,IAAI,KAAK,UAAvC,iBAAsD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALzD;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA/BD;;IAAMZ,W;UAcWJ,c,EAIEJ,Q;;;KAlBbQ,W;AAiCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}